<h1 class="title mb-4">
  Turn Existing SaaS Users 
  <span id="rotating-container">
    <span id="rotating-text">Frustrations</span>
  </span>
  Into Profitable micro-SaaS Ideas
</h1>

<style>
#rotating-container {
  display: inline-block;
  position: relative;
  min-width: 120px; /* Minimum width to reduce jarring */
  text-align: center;
  transition: width 0.5s ease;
}

#rotating-text {
  display: inline-block;
  transition: transform 0.5s ease, opacity 0.5s ease;
}

.fade-out {
  opacity: 0;
  transform: translateY(-20px);
}

.fade-in {
  opacity: 1;
  transform: translateY(0);
}

/* Cool text effect */
.text-effect {
  background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  animation: gradient 4s linear infinite;
}

@keyframes gradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Words to rotate through
  const words = [
    'Frustrations',
    'Pain Points',
    'Complaints',
    'Feedback'
  ];
  
  const container = document.getElementById('rotating-container');
  const rotatingElement = document.getElementById('rotating-text');
  let currentIndex = 0;
  
  // Set initial text
  rotatingElement.textContent = words[0];
  rotatingElement.classList.add('text-effect');
  
  // Set initial container width based on content
  adjustContainerWidth();
  
  function adjustContainerWidth() {
    // Create a temporary span to measure text width
    const temp = document.createElement('span');
    temp.style.visibility = 'hidden';
    temp.style.position = 'absolute';
    temp.style.whiteSpace = 'nowrap';
    temp.textContent = rotatingElement.textContent;
    temp.style.font = window.getComputedStyle(rotatingElement).font;
    document.body.appendChild(temp);
    
    // Get the width and add some padding
    const width = temp.offsetWidth + 20;
    container.style.width = width + 'px';
    
    // Remove the temporary element
    document.body.removeChild(temp);
  }
  
  // Function to change the text with animation
  function rotateWords() {
    // Fade out with transform
    rotatingElement.classList.add('fade-out');
    
    setTimeout(() => {
      // Change text
      currentIndex = (currentIndex + 1) % words.length;
      rotatingElement.textContent = words[currentIndex];
      
      // Adjust container width for new text
      adjustContainerWidth();
      
      // Trigger reflow for animation
      void rotatingElement.offsetWidth;
      
      // Fade in with transform
      rotatingElement.classList.remove('fade-out');
      rotatingElement.classList.add('fade-in');
      
      // Reset for next animation
      setTimeout(() => {
        rotatingElement.classList.remove('fade-in');
      }, 500);
    }, 500); // Wait for fade out to complete
  }
  
  // Change word every 2.5 seconds
  setInterval(rotateWords, 2500);
});
</script>


# Connect to Supabase via connection pooling with Supavisor.
DATABASE_URL="postgresql://postgres.hdfxpccuiixjkdtepxle:[YOUR-PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true"

# Direct connection to the database. Used for migrations.
DIRECT_URL="postgresql://postgres.hdfxpccuiixjkdtepxle:[YOUR-PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"



<section class="hero is-fullheight-with-navbar">
  <!-- Improved light bulb animation -->
  <div class="light-container">
    <div class="wire"></div>
    <div class="bulb-container">
      <div class="bulb-cap"></div>
      <div class="bulb glow"></div>
    </div>
  </div>
  
  <div class="hero-body">
    <div class="container">
      <div class="columns is-centered">
        <div class="column is-8 has-text-centered">
          <h1 class="title mb-4">
            Turn Existing SaaS Users 
            <span id="rotating-container">
              <span id="rotating-text">Frustrations</span>
            </span>
            Into Profitable micro-SaaS Ideas
          </h1>  
          <p class="subtitle has-text-white is-size-4 mb-6">
            Discover untapped market opportunities by analyzing user feedback from existing SaaS products. 
            Transform validated pain points into targeted micro-SaaS solutions that customers are ready to pay for.
          </p>
          <div class="buttons is-centered">
            <a href="{% url 'account_signup' %}" class="button cta-button is-large">
              <span class="icon mr-2">
                <i class="fas fa-lightbulb"></i>
              </span>
              <span>Start Your Analysis</span>
            </a>
            <a href="#how-it-works" class="button is-light is-outlined is-rounded">
              See How It Works
            </a>
          </div>
          <div class="demo-image mt-6">
            <img src="{% static 'demo.png' %}" alt="MicrosaaaLink Demo" class="has-shadow">
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Enhanced lightbulb effect */
  .light-container {
    position: relative;
    height: 150px;
    margin-bottom: 2rem;
    position: absolute;
    top: 16px;
    left: 50%;
    z-index: 99;
    transform: translateX(-50%);
  }
  
  .wire {
    position: absolute;
    width: 2px;
    height: 70px;
    background-color: #333;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    z-index: 0;
  }
  
  .bulb-container {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
  }
  
  .bulb {
    width: 80px;
    height: 80px;
    background-color: white;
    border-radius: 50%;
    position: relative;
    box-shadow: 0 0 60px 20px rgba(255, 255, 255, 0.6);
    transition: box-shadow 0.5s ease;
  }
  
  .bulb.glow {
    animation: glow 3s infinite alternate;
  }
  
  @keyframes glow {
    0% { box-shadow: 0 0 60px 20px rgba(255, 255, 255, 0.6); }
    100% { box-shadow: 0 0 80px 30px rgba(255, 255, 255, 0.9); }
  }
  
  .bulb-cap {
    width: 20px;
    height: 20px;
    background-color: #333;
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%);
    border-radius: 3px;
  }
  
  /* Enhanced rotating text effect */
  #rotating-container {
    display: inline-block;
    position: relative;
    min-width: 160px;
    text-align: center;
    transition: width 0.5s ease;
  }
  
  #rotating-text {
    display: inline-block;
    transition: transform 0.5s ease, opacity 0.5s ease;
    font-weight: 700;
  }
  
  .text-effect {
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    background-size: 200% auto;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: gradient 4s linear infinite;
  }
  
  /* Enhanced demo image */
  .demo-image img {
    border-radius: 10px;
    max-width: 100%;
    transition: transform 0.3s ease;
  }
  
  .has-shadow {
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
  }
  
  /* Enhanced CTA button */
  .cta-button {
    background: var(--primary-gradient);
    color: white;
    padding: 1rem 2rem;
    border-radius: 9999px;
    font-weight: 600;
    border: none;
    transition: all 0.3s ease;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2);
    color: white;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Words to rotate through
  const words = [
    'Frustrations',
    'Pain Points',
    'Complaints',
    'Problems',
    'Feedback'
  ];
  
  const container = document.getElementById('rotating-container');
  const rotatingElement = document.getElementById('rotating-text');
  let currentIndex = 0;
  
  // Set initial text
  rotatingElement.textContent = words[0];
  rotatingElement.classList.add('text-effect');
  
  // Set initial container width based on content
  adjustContainerWidth();
  
  function adjustContainerWidth() {
    // Create a temporary span to measure text width
    const temp = document.createElement('span');
    temp.style.visibility = 'hidden';
    temp.style.position = 'absolute';
    temp.style.whiteSpace = 'nowrap';
    temp.textContent = rotatingElement.textContent;
    temp.style.font = window.getComputedStyle(rotatingElement).font;
    document.body.appendChild(temp);
    
    // Get the width and add some padding
    const width = temp.offsetWidth + 40;
    container.style.width = width + 'px';
    
    // Remove the temporary element
    document.body.removeChild(temp);
  }
  
  // Function to change the text with animation
  function rotateWords() {
    // Fade out with transform
    rotatingElement.style.opacity = '0';
    rotatingElement.style.transform = 'translateY(-20px)';
    
    setTimeout(() => {
      // Change text
      currentIndex = (currentIndex + 1) % words.length;
      rotatingElement.textContent = words[currentIndex];
      
      // Adjust container width for new text
      adjustContainerWidth();
      
      // Fade in with transform
      rotatingElement.style.opacity = '1';
      rotatingElement.style.transform = 'translateY(0)';
    }, 500);
  }
  
  // Change word every 3 seconds
  setInterval(rotateWords, 3000);
});
</script>

<style>
  /* Update gradient variables */
  :root {
    --primary-gradient: linear-gradient(135deg, #6366F1 0%, #8B5CF6 50%, #4F46E5 100%);
    --text-gradient: linear-gradient(45deg, #6366F1 0%, #8B5CF6 50%, #4F46E5 100%);
  }

  /* Hero section styling */
  .hero {
    background-image: var(--primary-gradient);
    position: relative;
    overflow: hidden;
  }

  /* Animated gradient background for modern effect */
  .hero::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    background: linear-gradient(45deg, 
      rgba(99, 102, 241, 0.1) 0%, 
      rgba(139, 92, 246, 0.2) 50%, 
      rgba(79, 70, 229, 0.1) 100%);
    transform: rotate(30deg);
    animation: gradient-move 20s linear infinite;
    z-index: 1;
  }

  @keyframes gradient-move {
    0% { transform: rotate(30deg) translateX(-50%); }
    100% { transform: rotate(30deg) translateX(50%); }
  }

  /* Header text gradient */
  .hero .title {
    background: var(--text-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    position: relative;
    z-index: 2;
    display: inline-block;
    padding: 0 10px;
  }

  /* Rotating text gradient */
  .text-effect {
    background: var(--text-gradient);
    background-size: 300% 300%;
    -webkit-background-clip: text;
    background-clip: text;
    animation: gradient-text 8s ease infinite;
  }

  @keyframes gradient-text {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Ensure content stays above animated background */
  .hero-body {
    position: relative;
    z-index: 2;
  }
</style>

<section class="hero is-fullheight-with-navbar" style="padding-top: 4rem;">
  <!-- Light bulb animation remains unchanged -->
  <div class="hero-body">
    <div class="container">
      <div class="columns is-centered">
        <div class="column is-8 has-text-centered">
          <h1 class="title mb-4 is-size-2">
            Turn Existing SaaS Users 
            <span id="rotating-container">
              <span id="rotating-text" class="text-effect">Frustrations</span>
            </span>
            Into Profitable micro-SaaS Ideas
          </h1>  
          <!-- Rest of the hero content remains unchanged -->
        </div>
      </div>
    </div>
  </div>
</section>



# views.py
from django.shortcuts import render
from django.views.generic import TemplateView
from django.core.mail import send_mail
from django.conf import settings
from django.contrib import messages

# Static Pages
def home(request):
    return render(request, 'home/index.html', {
        'featured_opportunities': get_featured_opportunities(),  # Your custom logic
        'testimonials': Testimonial.objects.all()  # If you have a model
    })

def pricing(request):
    return render(request, 'home/pricing.html', {
        'pricing_tiers': [
            {'name': 'Basic', 'price': 49},
            {'name': 'Pro', 'price': 99},
            {'name': 'Enterprise', 'price': 299}
        ]
    })

def about(request):
    return render(request, 'home/about.html')

def blog(request):
    # If you have a Blog model:
    # posts = BlogPost.objects.filter(published=True).order_by('-created_at')
    return render(request, 'home/blog.html', {
        # 'posts': posts
    })

# Legal Pages
def terms_of_service(request):
    return render(request, 'legal/terms.html')

def privacy_policy(request):
    return render(request, 'legal/privacy.html')

def refund_policy(request):
    return render(request, 'legal/refund.html')

# Support Views
def contact(request):
    if request.method == 'POST':
        # Process contact form
        name = request.POST.get('name')
        email = request.POST.get('email')
        message = request.POST.get('message')
        
        send_mail(
            f"Contact Form Submission from {name}",
            message,
            email,
            [settings.DEFAULT_FROM_EMAIL],
            fail_silently=False,
        )
        messages.success(request, "Your message has been sent!")
        return redirect('contact')
    
    return render(request, 'support/contact.html')

def faq(request):
    faq_categories = {
        'General': [
            {'question': 'How does it work?', 'answer': '...'},
            # ... more questions
        ],
        'Billing': [
            # ... billing questions
        ]
    }
    return render(request, 'support/faq.html', {'faq_categories': faq_categories})

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>MicroSaaSLink - Terms of Service</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <style>
        .section { padding: 3rem 1.5rem; }
        .content { max-width: 800px; margin: 0 auto; }
        .toc-list { position: sticky; top: 20px; }
        .highlight { background-color: #f5f5f5; padding: 1.5rem; border-radius: 6px; }
        h2 { margin-top: 2rem; padding-top: 1rem; border-top: 1px solid #eee; }
        h3 { margin-top: 1.5rem; }
    </style>
</head>
<body>
    <section class="section">
        <div class="container">
            <div class="content">
                <h1 class="title is-2">Terms of Service</h1>
                <p class="subtitle is-6">Last Updated: March 16, 2025</p>

                <div class="box has-background-light toc-list">
                    <h2 class="title is-5">Table of Contents</h2>
                    <ul>
                        <li><a href="#introduction">1. Introduction</a></li>
                        <li><a href="#definitions">2. Definitions</a></li>
                        <li><a href="#account-registration">3. Account Registration</a></li>
                        <li><a href="#subscription">4. Subscription and Payment</a></li>
                        <li><a href="#refund">5. Refund Policy</a></li>
                        <li><a href="#usage">6. Service Usage and Limitations</a></li>
                        <li><a href="#content">7. User Content</a></li>
                        <li><a href="#warranties">8. Disclaimer of Warranties</a></li>
                        <li><a href="#liability">9. Limitation of Liability</a></li>
                        <li><a href="#indemnification">10. Indemnification</a></li>
                        <li><a href="#privacy">11. Data Privacy</a></li>
                        <li><a href="#termination">12. Termination</a></li>
                        <li><a href="#modifications">13. Modifications</a></li>
                        <li><a href="#law">14. Governing Law</a></li>
                        <li><a href="#contact">15. Contact Us</a></li>
                        <li><a href="#agreement">16. Entire Agreement</a></li>
                        <li><a href="#severability">17. Severability</a></li>
                        <li><a href="#waiver">18. Waiver</a></li>
                        <li><a href="#assignment">19. Assignment</a></li>
                        <li><a href="#force-majeure">20. Force Majeure</a></li>
                    </ul>
                </div>

                <!-- Section 1 -->
                <section id="introduction">
                    <h2 class="title is-4">1. Introduction</h2>
                    <p>Welcome to MicroSaaSLink ("we," "our," "us," "the Company," or "MicroSaaSLink"). These Terms of Service ("Terms") govern your access to and use of our website at microsaasl.ink and all related services (collectively, the "Service"). By accessing or using the Service, you agree to be bound by these Terms. If you do not agree to these Terms, please do not access or use the Service.</p>
                    <p>MicroSaaSLink is a platform that helps users identify potential micro-SaaS opportunities by analyzing user feedback from existing SaaS products to find pain points that can be transformed into solutions.</p>
                </section>

                <!-- Section 2 -->
                <section id="definitions">
                    <h2 class="title is-4">2. Definitions</h2>
                    <ul>
                        <li><strong>"User," "You," or "Your"</strong> refers to any individual or entity that accesses or uses the Service.</li>
                        <li><strong>"Content"</strong> refers to all information, data, text, software, music, sound, photographs, graphics, videos, messages, or other materials that users submit, post, or display on or through the Service.</li>
                        <li><strong>"micro-SaaS Ideas"</strong> refers to the business opportunities and concepts generated by our platform based on analysis of existing SaaS products.</li>
                    </ul>
                </section>

                <!-- Section 3 -->
                <section id="account-registration">
                    <h2 class="title is-4">3. Account Registration</h2>
                    
                    <h3 class="subtitle is-5">3.1 Account Creation</h3>
                    <p>To access certain features of the Service, you must register for an account. You may register directly by providing your username, full name, and email address, or through your Google account. When you register through a social login option, we collect the same information as with manual signup.</p>
                    
                    <h3 class="subtitle is-5">3.2 Account Responsibility</h3>
                    <p>You are responsible for maintaining the confidentiality of your account credentials and for all activities that occur under your account. You agree to notify us immediately of any unauthorized use of your account.</p>
                    
                    <h3 class="subtitle is-5">3.3 Account Restrictions</h3>
                    <p>Each individual is entitled to one account only. Account sharing is strictly prohibited. We reserve the right to terminate any accounts that we reasonably believe are being shared among multiple users.</p>
                </section>

                <!-- Section 4 -->
                <section id="subscription">
                    <h2 class="title is-4">4. Subscription and Payment</h2>
                    
                    <h3 class="subtitle is-5">4.1 Subscription Options</h3>
                    <p>We offer subscription plans that may be billed on a monthly or annual basis. Annual subscriptions may be offered at a discount compared to monthly billing.</p>
                    
                    <h3 class="subtitle is-5">4.2 Payment Processing</h3>
                    <p>All payments are processed securely through our payment processor, Paddle. By subscribing to our Service, you authorize us to charge the payment method you provide for the subscription plan you choose.</p>
                    
                    <h3 class="subtitle is-5">4.3 Subscription Renewal</h3>
                    <p>Subscriptions automatically renew at the end of each billing period unless canceled before the renewal date. You may cancel your subscription at any time through your account settings.</p>
                    
                    <h3 class="subtitle is-5">4.4 Price Changes</h3>
                    <p>We reserve the right to adjust pricing for our services at any time. If we change pricing, we will provide notice of the change on our website or by email at least 14 days before the change takes effect.</p>
                </section>

                <!-- Section 5 -->
                <section id="refund">
                    <h2 class="title is-4">5. Refund Policy</h2>
                    
                    <h3 class="subtitle is-5">5.1 Eligibility for Refunds</h3>
                    <p>Refunds may be requested only if you have not generated any micro-SaaS ideas using our Service. Once you have used the Service to generate ideas, no refunds will be issued.</p>
                    
                    <h3 class="subtitle is-5">5.2 Refund Process</h3>
                    <p>For complete details on our refund policy, please visit <a href="https://microsaasl.ink/refund/" class="has-text-link">https://microsaasl.ink/refund/</a>. All refund requests must be submitted according to the procedures outlined in that policy.</p>
                </section>

                <!-- Continue adding all remaining sections following the same pattern -->

                <!-- Section 20 -->
                <section id="force-majeure">
                    <h2 class="title is-4">20. Force Majeure</h2>
                    <p>We will not be liable for any failure or delay in performance resulting from causes beyond our reasonable control, including but not limited to acts of God, natural disasters, pandemic, war, terrorism, riots, civil unrest, government action, labor disputes, or internet service provider failures.</p>
                </section>
            </div>
        </div>
    </section>

</body>
</html>

